客户端在收到中间件发来的运算请求后,开始执行棋步算法,那么需要通过多线程的方式启动当前的运算吗?
	a.算完后查看是否超时,超时就不向中间件发送运算结果,反之发
	b.如果是同步的运算,那么在算完前是不知道超时与否,如果没超时,继续算,如果超时了,服务器可能会发来一个新的运算请求(因为其它用户算的快?),
		所以为了时间累计,采用多线程?


	解决办法:
	1.中间件也计算客户端的运算时间,如果超时,向客户端发送一个超时api,停止它的运算?
	2.为了减少不必要的运算，客户端每创建一个运算线程，伴随创建一个计时线程，时间一到就停止运算线程。

每次中间件发送的运算请求，客户端收到的是一个全新的棋局，还是应该是对手的改变集？ （都提供？）


1.联入之后服务器分配一个角色给玩家,
2.玩家到齐后由第一个连进的玩家开始游戏,
3.玩家根据服务器发来的当前棋局运算按照getAction(**)接口规定发送计算结果返回给服务器, 此间服务器会计时,超时就按照默认步帮玩家走棋,
4.服务器通知下一个玩家走棋
5. (3~4)循环,直到服务器检测到局势发生改变